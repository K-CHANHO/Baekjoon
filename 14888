import java.io.*;
import java.util.*;

class Main {
	static BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
	static int[] cal, arr;
	static int max=Integer.MIN_VALUE, min=Integer.MAX_VALUE, n;
	
	public static void solution(int num, int idx) throws IOException {
		if(idx == n) {
			max = Math.max(num, max);
			min = Math.min(num, min);
			return;
		}
		else {
			
			for(int i=0; i<4; i++) {
				if(cal[i] > 0) {
					cal[i]--;
					switch(i) {
					case 0 : solution(num+arr[idx], idx+1); break;
					case 1 : solution(num-arr[idx], idx+1); break;
					case 2 : solution(num*arr[idx], idx+1); break;
					case 3 : solution(num/arr[idx], idx+1); break;
					}
					cal[i]++;
				}
			}
		}
	}
	
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		n = Integer.parseInt(br.readLine());
		arr = new int[n];
		
		StringTokenizer st = new StringTokenizer(br.readLine(), " ");
		for(int i=0; i<n; i++) {
			arr[i] = Integer.parseInt(st.nextToken());
		}
		
		cal = new int[4];
		st = new StringTokenizer(br.readLine(), " ");
		for(int i=0; i<4; i++) {
			cal[i] = Integer.parseInt(st.nextToken());
		}
		
		solution(arr[0], 1);
		bw.write(Integer.toString(max));
		bw.newLine();
		bw.write(Integer.toString(min));
		bw.flush();
		bw.close();	
	}
}
