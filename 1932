import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.StringTokenizer;

class Main {
	static BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
	static int[][] arr;
	static Integer[][] dp;
	static int n;
	
	public static void main(String[] args) throws IOException{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		
		n = Integer.parseInt(br.readLine());
		arr = new int[n][n];
		dp = new Integer[n][n];
		
		for(int i=0; i<n; i++) {
			StringTokenizer st = new StringTokenizer(br.readLine());
			for(int j=0; j<=i; j++) {
				arr[i][j] = Integer.parseInt(st.nextToken());
			}
		}
		
		for(int i=0; i<n; i++) {
			dp[n-1][i] = arr[n-1][i];
		}
		
		System.out.println(solution(0,0));
	}
	
	static int solution(int depth, int idx) {
		if(depth == n-1) {
			return dp[depth][idx];
		}
		if(dp[depth][idx] == null) {
			dp[depth][idx] = Math.max(solution(depth+1, idx), solution(depth+1, idx+1)) + arr[depth][idx];
		}
		return dp[depth][idx];
	}
}
