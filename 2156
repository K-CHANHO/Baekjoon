import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.StringTokenizer;

class Main {
	static BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
	static int n;
	static int[] arr;
	static Integer[] dp;
	
	public static void main(String[] args) throws IOException{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		
		n = Integer.parseInt(br.readLine());	
		
		arr = new int[n+1];
		dp = new Integer[n+1];
		
		for(int i=1; i<=n; i++) {
			StringTokenizer st = new StringTokenizer(br.readLine());
			arr[i] = Integer.parseInt(st.nextToken());
		}
		
		dp[0] = 0;
		dp[1] = arr[1];
		if(n>1) dp[2] = arr[1] + arr[2];
		

		System.out.println(solution(n));
	}
	
	static int solution(int N) {
		if(dp[N] == null) {
			dp[N] = Math.max((Math.max(solution(N-2), solution(N-3)+arr[N-1]) + arr[N]),(solution(N-1)));
			return dp[N];
		} else {
			return dp[N];
		}

		
	}
}
